/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 15.2 		*/
/*  Created On : 03-апр-2022 12:40:36 				*/
/*  DBMS       : PostgreSQL 						*/
/* ---------------------------------------------------- */

/* Drop Sequences for Autonumber Columns */

DROP SEQUENCE IF EXISTS address_id_seq
;

DROP SEQUENCE IF EXISTS address_city_id_seq
;

DROP SEQUENCE IF EXISTS address_state_id_seq
;

DROP SEQUENCE IF EXISTS app_user_id_seq
;

DROP SEQUENCE IF EXISTS application_id_seq
;

DROP SEQUENCE IF EXISTS application_item_id_seq
;

DROP SEQUENCE IF EXISTS application_status_id_seq
;

DROP SEQUENCE IF EXISTS car_id_seq
;

DROP SEQUENCE IF EXISTS customer_id_seq
;

DROP SEQUENCE IF EXISTS customer_status_id_seq
;

DROP SEQUENCE IF EXISTS item_id_seq
;

DROP SEQUENCE IF EXISTS item_category_id_seq
;

DROP SEQUENCE IF EXISTS retailer_id_seq
;

DROP SEQUENCE IF EXISTS retailer_status_id_seq
;

DROP SEQUENCE IF EXISTS retailer_warehouse_id_seq
;

DROP SEQUENCE IF EXISTS role_permission_id_seq
;

DROP SEQUENCE IF EXISTS user_permission_id_seq
;

DROP SEQUENCE IF EXISTS user_role_id_seq
;

DROP SEQUENCE IF EXISTS user_status_id_seq
;

DROP SEQUENCE IF EXISTS warehouse_id_seq
;

DROP SEQUENCE IF EXISTS warehouse_item_id_seq
;

DROP SEQUENCE IF EXISTS waybill_id_seq
;

DROP SEQUENCE IF EXISTS waybill_status_id_seq
;

DROP SEQUENCE IF EXISTS write_off_act_id_seq
;

DROP SEQUENCE IF EXISTS write_off_item_id_seq
;

DROP SEQUENCE IF EXISTS write_off_reason_id_seq
;

/* Drop Tables */

DROP TABLE IF EXISTS address CASCADE
;

DROP TABLE IF EXISTS address_city CASCADE
;

DROP TABLE IF EXISTS address_state CASCADE
;

DROP TABLE IF EXISTS app_user CASCADE
;

DROP TABLE IF EXISTS application CASCADE
;

DROP TABLE IF EXISTS application_item CASCADE
;

DROP TABLE IF EXISTS application_status CASCADE
;

DROP TABLE IF EXISTS car CASCADE
;

DROP TABLE IF EXISTS customer CASCADE
;

DROP TABLE IF EXISTS customer_status CASCADE
;

DROP TABLE IF EXISTS item CASCADE
;

DROP TABLE IF EXISTS item_category CASCADE
;

DROP TABLE IF EXISTS retailer CASCADE
;

DROP TABLE IF EXISTS retailer_status CASCADE
;

DROP TABLE IF EXISTS retailer_warehouse CASCADE
;

DROP TABLE IF EXISTS role_permission CASCADE
;

DROP TABLE IF EXISTS user_permission CASCADE
;

DROP TABLE IF EXISTS user_role CASCADE
;

DROP TABLE IF EXISTS user_status CASCADE
;

DROP TABLE IF EXISTS warehouse CASCADE
;

DROP TABLE IF EXISTS warehouse_item CASCADE
;

DROP TABLE IF EXISTS waybill CASCADE
;

DROP TABLE IF EXISTS waybill_status CASCADE
;

DROP TABLE IF EXISTS write_off_act CASCADE
;

DROP TABLE IF EXISTS write_off_item CASCADE
;

DROP TABLE IF EXISTS write_off_reason CASCADE
;

/* Create Tables */

CREATE TABLE address
(
    id             bigint      NOT NULL DEFAULT NEXTVAL(('"address_id_seq"'::text)::regclass),
    city_id        integer     NOT NULL,
    address_line_1 varchar(50) NOT NULL,
    address_line_2 varchar(50) NULL
)
;

CREATE TABLE address_city
(
    id       integer     NOT NULL DEFAULT NEXTVAL(('"address_city_id_seq"'::text)::regclass),
    c_name   varchar(50) NOT NULL,
    state_id smallint    NOT NULL
)
;

CREATE TABLE address_state
(
    id     smallint    NOT NULL DEFAULT NEXTVAL(('"address_state_id_seq"'::text)::regclass),
    s_name varchar(50) NOT NULL,
    s_code char(2)     NOT NULL
)
;

CREATE TABLE app_user
(
    id          integer     NOT NULL DEFAULT NEXTVAL(('"app_user_id_seq"'::text)::regclass),
    first_name  varchar(50) NOT NULL,
    last_name   varchar(50) NOT NULL,
    email       varchar(50) NOT NULL,
    password    varchar(50) NOT NULL,
    role_id     smallint    NOT NULL,
    customer_id integer     NOT NULL,
    address_id  bigint      NOT NULL,
    birthday    date        NOT NULL,
    status_id   smallint    NOT NULL
)
;

CREATE TABLE application
(
    id                 bigint      NOT NULL DEFAULT NEXTVAL(('"application_id_seq"'::text)::regclass),
    a_number           varchar(20) NOT NULL,
    src_warehouse_id   integer     NOT NULL,
    dest_warehouse_id  integer     NOT NULL,
    creator_id         integer     NOT NULL,
    create_time        timestamp without time zone NOT NULL,
    last_editor_id     integer     NOT NULL,
    last_edit_time     timestamp without time zone NOT NULL,
    status_id          smallint    NOT NULL,
    dispatching        boolean     NOT NULL,
    waybill_id         bigint NULL,
    waybill_seq_number smallint NULL
)
;

CREATE TABLE application_item
(
    id             bigint         NOT NULL DEFAULT NEXTVAL(('"application_item_id_seq"'::text)::regclass),
    application_id bigint         NOT NULL,
    item_id        bigint         NOT NULL,
    amount         smallint       NOT NULL,
    total_price    numeric(10, 2) NOT NULL,
    placed_count   smallint NULL
)
;

CREATE TABLE application_status
(
    id          smallint    NOT NULL DEFAULT NEXTVAL(('"application_status_id_seq"'::text)::regclass),
    s_name      varchar(50) NOT NULL,
    description varchar(100) NULL
)
;

CREATE TABLE car
(
    id              bigint     NOT NULL DEFAULT NEXTVAL(('"car_id_seq"'::text)::regclass),
    c_number        varchar(7) NOT NULL,
    last_address_id bigint     NOT NULL,
    total_capacity  smallint   NOT NULL,
    customer_id     integer    NOT NULL
)
;

CREATE TABLE customer
(
    id                integer     NOT NULL DEFAULT NEXTVAL(('"customer_id_seq"'::text)::regclass),
    c_name            varchar(50) NOT NULL,
    registration_date date        NOT NULL,
    status_id         smallint    NOT NULL
)
;

CREATE TABLE customer_status
(
    id          smallint    NOT NULL DEFAULT NEXTVAL(('"customer_status_id_seq"'::text)::regclass),
    s_name      varchar(50) NOT NULL,
    description varchar(100) NULL
)
;

CREATE TABLE item
(
    id          bigint         NOT NULL DEFAULT NEXTVAL(('"item_id_seq"'::text)::regclass),
    i_name      varchar(50)    NOT NULL,
    upc         bigint         NOT NULL,
    price       numeric(10, 2) NOT NULL,
    category_id smallint       NOT NULL,
    unit_size   smallint       NOT NULL,
    customer_id integer        NOT NULL
)
;

CREATE TABLE item_category
(
    id          smallint       NOT NULL DEFAULT NEXTVAL(('"item_category_id_seq"'::text)::regclass),
    c_name      varchar(50)    NOT NULL,
    tax_rate    numeric(10, 2) NOT NULL,
    customer_id integer        NOT NULL
)
;

CREATE TABLE retailer
(
    id          integer     NOT NULL DEFAULT NEXTVAL(('"retailer_id_seq"'::text)::regclass),
    r_name      varchar(50) NOT NULL,
    description varchar(200) NULL,
    customer_id integer     NOT NULL,
    status_id   smallint    NOT NULL
)
;

CREATE TABLE retailer_status
(
    id          smallint    NOT NULL DEFAULT NEXTVAL(('"retailer_status_id_seq"'::text)::regclass),
    s_name      varchar(50) NOT NULL,
    description varchar(100) NULL
)
;

CREATE TABLE retailer_warehouse
(
    id          integer     NOT NULL DEFAULT NEXTVAL(('"retailer_warehouse_id_seq"'::text)::regclass),
    w_name      varchar(50) NOT NULL,
    address_id  bigint      NOT NULL,
    retailer_id integer     NOT NULL
)
;

CREATE TABLE role_permission
(
    id            smallint NOT NULL DEFAULT NEXTVAL(('"role_permission_id_seq"'::text)::regclass),
    role_id       smallint NOT NULL,
    permission_id smallint NOT NULL
)
;

CREATE TABLE user_permission
(
    id     smallint    NOT NULL DEFAULT NEXTVAL(('"user_permission_id_seq"'::text)::regclass),
    p_name varchar(50) NOT NULL
)
;

CREATE TABLE user_role
(
    id          smallint    NOT NULL DEFAULT NEXTVAL(('"user_role_id_seq"'::text)::regclass),
    r_name      varchar(50) NOT NULL,
    description varchar(100) NULL
)
;

CREATE TABLE user_status
(
    id          smallint    NOT NULL DEFAULT NEXTVAL(('"user_status_id_seq"'::text)::regclass),
    s_name      varchar(50) NOT NULL,
    description varchar(100) NULL
)
;

CREATE TABLE warehouse
(
    id             integer     NOT NULL DEFAULT NEXTVAL(('"warehouse_id_seq"'::text)::regclass),
    w_name         varchar(50) NOT NULL,
    address_id     bigint      NOT NULL,
    total_capacity smallint    NOT NULL,
    customer_id    integer     NOT NULL
)
;

CREATE TABLE warehouse_item
(
    id           bigint   NOT NULL DEFAULT NEXTVAL(('"warehouse_item_id_seq"'::text)::regclass),
    warehouse_id integer  NOT NULL,
    item_id      bigint   NOT NULL,
    amount       smallint NOT NULL
)
;

CREATE TABLE waybill
(
    id             bigint      NOT NULL DEFAULT NEXTVAL(('"waybill_id_seq"'::text)::regclass),
    w_number       varchar(50) NOT NULL,
    car_id         bigint      NOT NULL,
    driver_id      integer NULL,
    creator_id     integer     NOT NULL,
    create_time    timestamp without time zone NOT NULL,
    last_editor_id integer     NOT NULL,
    last_edit_time timestamp without time zone NOT NULL,
    state_id       smallint    NOT NULL
)
;

CREATE TABLE waybill_status
(
    id          smallint    NOT NULL DEFAULT NEXTVAL(('"waybill_status_id_seq"'::text)::regclass),
    s_name      varchar(50) NOT NULL,
    description varchar(100) NULL
)
;

CREATE TABLE write_off_act
(
    id          integer NOT NULL DEFAULT NEXTVAL(('"write_off_act_id_seq"'::text)::regclass),
    act_date    date    NOT NULL,
    reporter_id integer NOT NULL
)
;

CREATE TABLE write_off_item
(
    id        bigint   NOT NULL DEFAULT NEXTVAL(('"write_off_item_id_seq"'::text)::regclass),
    act_id    bigint   NOT NULL,
    item_id   bigint   NOT NULL,
    amount    smallint NOT NULL,
    reason_id smallint NOT NULL
)
;

CREATE TABLE write_off_reason
(
    id          smallint    NOT NULL DEFAULT NEXTVAL(('"write_off_reason_id_seq"'::text)::regclass),
    r_name      varchar(50) NOT NULL,
    description varchar(100) NULL
)
;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE address
    ADD CONSTRAINT "PK_address"
        PRIMARY KEY (id)
;

CREATE
INDEX "IXFK_address_address_city" ON address (city_id ASC)
;

ALTER TABLE address_city
    ADD CONSTRAINT "PK_address_city"
        PRIMARY KEY (id)
;

CREATE
INDEX "IXFK_address_city_address_state" ON address_city (state_id ASC)
;

ALTER TABLE address_state
    ADD CONSTRAINT "PK_address_state"
        PRIMARY KEY (id)
;

ALTER TABLE app_user
    ADD CONSTRAINT "PK_app_user"
        PRIMARY KEY (id)
;

ALTER TABLE app_user
    ADD CONSTRAINT "UNQ_email" UNIQUE (email)
;

CREATE
INDEX "IXFK_app_user_address" ON app_user (address_id ASC)
;

CREATE
INDEX "IXFK_app_user_customer" ON app_user (customer_id ASC)
;

CREATE
INDEX "IXFK_app_user_user_role" ON app_user (role_id ASC)
;

CREATE
INDEX "IXFK_app_user_user_status" ON app_user (status_id ASC)
;

ALTER TABLE application
    ADD CONSTRAINT "PK_application"
        PRIMARY KEY (id)
;

ALTER TABLE application
    ADD CONSTRAINT "UNQ_waybill_waybill_seq_number" UNIQUE (waybill_id, waybill_seq_number)
;

CREATE
INDEX "IXFK_application_app_user_creator" ON application (creator_id ASC)
;

CREATE
INDEX "IXFK_application_app_user_last_editor" ON application (last_editor_id ASC)
;

CREATE
INDEX "IXFK_application_application_status" ON application (status_id ASC)
;

CREATE
INDEX "IXFK_application_retailer_warehouse" ON application (dest_warehouse_id ASC)
;

CREATE
INDEX "IXFK_application_warehouse" ON application (src_warehouse_id ASC)
;

CREATE
INDEX "IXFK_application_waybill" ON application (waybill_id ASC)
;

ALTER TABLE application_item
    ADD CONSTRAINT "PK_application_item"
        PRIMARY KEY (id)
;

CREATE
INDEX "IXFK_application_item_application" ON application_item (application_id ASC)
;

CREATE
INDEX "IXFK_application_item_item" ON application_item (item_id ASC)
;

ALTER TABLE application_status
    ADD CONSTRAINT "PK_application_status"
        PRIMARY KEY (id)
;

ALTER TABLE car
    ADD CONSTRAINT "PK_car"
        PRIMARY KEY (id)
;

ALTER TABLE car
    ADD CONSTRAINT "UNQ_number" UNIQUE (c_number)
;

CREATE
INDEX "IXFK_car_address" ON car (last_address_id ASC)
;

CREATE
INDEX "IXFK_car_customer" ON car (customer_id ASC)
;

ALTER TABLE customer
    ADD CONSTRAINT "PK_customer"
        PRIMARY KEY (id)
;

ALTER TABLE customer
    ADD CONSTRAINT "UNQ_name" UNIQUE (c_name)
;

CREATE
INDEX "IXFK_customer_customer_status" ON customer (status_id ASC)
;

ALTER TABLE customer_status
    ADD CONSTRAINT "PK_customer_status"
        PRIMARY KEY (id)
;

ALTER TABLE item
    ADD CONSTRAINT "PK_item"
        PRIMARY KEY (id)
;

ALTER TABLE item
    ADD CONSTRAINT "UNQ_customer_id_upc" UNIQUE (customer_id, upc)
;

CREATE
INDEX "IXFK_item_customer" ON item (customer_id ASC)
;

CREATE
INDEX "IXFK_item_item_category" ON item (category_id ASC)
;

ALTER TABLE item_category
    ADD CONSTRAINT "PK_item_category"
        PRIMARY KEY (id)
;

ALTER TABLE item_category
    ADD CONSTRAINT "UNQ_customer_name" UNIQUE (customer_id, c_name)
;

CREATE
INDEX "IXFK_item_category_customer" ON item_category (customer_id ASC)
;

ALTER TABLE retailer
    ADD CONSTRAINT "PK_retailer"
        PRIMARY KEY (id)
;

ALTER TABLE retailer
    ADD CONSTRAINT "UNQ_customer_id_retailer_name" UNIQUE (customer_id, r_name)
;

CREATE
INDEX "IXFK_retailer_customer" ON retailer (customer_id ASC)
;

CREATE
INDEX "IXFK_retailer_retailer_status" ON retailer (status_id ASC)
;

ALTER TABLE retailer_status
    ADD CONSTRAINT "PK_retailer_status"
        PRIMARY KEY (id)
;

ALTER TABLE retailer_warehouse
    ADD CONSTRAINT "PK_retailer_warehouse"
        PRIMARY KEY (id)
;

ALTER TABLE retailer_warehouse
    ADD CONSTRAINT "UNQ_retailer_warehouse_address_id" UNIQUE (address_id)
;

ALTER TABLE retailer_warehouse
    ADD CONSTRAINT "UNQ_retailer_id_name" UNIQUE (retailer_id, w_name)
;

CREATE
INDEX "IXFK_retailer_warehouse_address" ON retailer_warehouse (address_id ASC)
;

CREATE
INDEX "IXFK_retailer_warehouse_retailer" ON retailer_warehouse (retailer_id ASC)
;

ALTER TABLE role_permission
    ADD CONSTRAINT "PK_role_permission"
        PRIMARY KEY (id)
;

ALTER TABLE role_permission
    ADD CONSTRAINT "UNQ_role_permission" UNIQUE (role_id, permission_id)
;

CREATE
INDEX "IXFK_role_permission_user_permission" ON role_permission (permission_id ASC)
;

CREATE
INDEX "IXFK_role_permission_user_role" ON role_permission (role_id ASC)
;

ALTER TABLE user_permission
    ADD CONSTRAINT "PK_user_permission"
        PRIMARY KEY (id)
;

ALTER TABLE user_role
    ADD CONSTRAINT "PK_user_role"
        PRIMARY KEY (id)
;

ALTER TABLE user_status
    ADD CONSTRAINT "PK_user_status"
        PRIMARY KEY (id)
;

ALTER TABLE warehouse
    ADD CONSTRAINT "PK_warehouse"
        PRIMARY KEY (id)
;

ALTER TABLE warehouse
    ADD CONSTRAINT "UNQ_customer_id_name" UNIQUE (customer_id, w_name)
;

ALTER TABLE warehouse
    ADD CONSTRAINT "UNQ_warehouse_address_id" UNIQUE (address_id)
;

CREATE
INDEX "IXFK_warehouse_address" ON warehouse (address_id ASC)
;

CREATE
INDEX "IXFK_warehouse_customer" ON warehouse (customer_id ASC)
;

ALTER TABLE warehouse_item
    ADD CONSTRAINT "PK_warehouse_item"
        PRIMARY KEY (id)
;

CREATE
INDEX "IXFK_warehouse_item_item" ON warehouse_item (item_id ASC)
;

CREATE
INDEX "IXFK_warehouse_item_warehouse" ON warehouse_item (warehouse_id ASC)
;

ALTER TABLE waybill
    ADD CONSTRAINT "PK_waybill"
        PRIMARY KEY (id)
;

CREATE
INDEX "IXFK_waybill_app_user_creator" ON waybill (creator_id ASC)
;

CREATE
INDEX "IXFK_waybill_app_user_driver" ON waybill (driver_id ASC)
;

CREATE
INDEX "IXFK_waybill_app_user_last_editor" ON waybill (last_editor_id ASC)
;

CREATE
INDEX "IXFK_waybill_car" ON waybill (car_id ASC)
;

CREATE
INDEX "IXFK_waybill_waybill_status" ON waybill (state_id ASC)
;

ALTER TABLE waybill_status
    ADD CONSTRAINT "PK_waybill_status"
        PRIMARY KEY (id)
;

ALTER TABLE write_off_act
    ADD CONSTRAINT "PK_write_off"
        PRIMARY KEY (id)
;

CREATE
INDEX "IXFK_write_off_act_app_user" ON write_off_act (reporter_id ASC)
;

ALTER TABLE write_off_item
    ADD CONSTRAINT "PK_write_off_item"
        PRIMARY KEY (id)
;

CREATE
INDEX "IXFK_write_off_item_item" ON write_off_item (item_id ASC)
;

CREATE
INDEX "IXFK_write_off_item_write_off_act" ON write_off_item (act_id ASC)
;

CREATE
INDEX "IXFK_write_off_item_write_off_reason" ON write_off_item (reason_id ASC)
;

ALTER TABLE write_off_reason
    ADD CONSTRAINT "PK_write_off_reason"
        PRIMARY KEY (id)
;

/* Create Foreign Key Constraints */

ALTER TABLE address
    ADD CONSTRAINT "FK_address_address_city"
        FOREIGN KEY (city_id) REFERENCES address_city (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE address_city
    ADD CONSTRAINT "FK_address_city_address_state"
        FOREIGN KEY (state_id) REFERENCES address_state (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE app_user
    ADD CONSTRAINT "FK_app_user_address"
        FOREIGN KEY (address_id) REFERENCES address (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE app_user
    ADD CONSTRAINT "FK_app_user_customer"
        FOREIGN KEY (customer_id) REFERENCES customer (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE app_user
    ADD CONSTRAINT "FK_app_user_user_role"
        FOREIGN KEY (role_id) REFERENCES user_role (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE app_user
    ADD CONSTRAINT "FK_app_user_user_status"
        FOREIGN KEY (status_id) REFERENCES user_status (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE application
    ADD CONSTRAINT "FK_application_app_user_creator"
        FOREIGN KEY (creator_id) REFERENCES app_user (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE application
    ADD CONSTRAINT "FK_application_app_user_last_editor"
        FOREIGN KEY (last_editor_id) REFERENCES app_user (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE application
    ADD CONSTRAINT "FK_application_application_status"
        FOREIGN KEY (status_id) REFERENCES application_status (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE application
    ADD CONSTRAINT "FK_application_retailer_warehouse"
        FOREIGN KEY (dest_warehouse_id) REFERENCES retailer_warehouse (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE application
    ADD CONSTRAINT "FK_application_warehouse"
        FOREIGN KEY (src_warehouse_id) REFERENCES warehouse (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE application
    ADD CONSTRAINT "FK_application_waybill"
        FOREIGN KEY (waybill_id) REFERENCES waybill (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE application_item
    ADD CONSTRAINT "FK_application_item_application"
        FOREIGN KEY (application_id) REFERENCES application (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE application_item
    ADD CONSTRAINT "FK_application_item_item"
        FOREIGN KEY (item_id) REFERENCES item (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE car
    ADD CONSTRAINT "FK_car_address"
        FOREIGN KEY (last_address_id) REFERENCES address (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE car
    ADD CONSTRAINT "FK_car_customer"
        FOREIGN KEY (customer_id) REFERENCES customer (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE customer
    ADD CONSTRAINT "FK_customer_customer_status"
        FOREIGN KEY (status_id) REFERENCES customer_status (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE item
    ADD CONSTRAINT "FK_item_customer"
        FOREIGN KEY (customer_id) REFERENCES customer (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE item
    ADD CONSTRAINT "FK_item_item_category"
        FOREIGN KEY (category_id) REFERENCES item_category (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE item_category
    ADD CONSTRAINT "FK_item_category_customer"
        FOREIGN KEY (customer_id) REFERENCES customer (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE retailer
    ADD CONSTRAINT "FK_retailer_customer"
        FOREIGN KEY (customer_id) REFERENCES customer (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE retailer
    ADD CONSTRAINT "FK_retailer_retailer_status"
        FOREIGN KEY (status_id) REFERENCES retailer_status (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE retailer_warehouse
    ADD CONSTRAINT "FK_retailer_warehouse_address"
        FOREIGN KEY (address_id) REFERENCES address (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE retailer_warehouse
    ADD CONSTRAINT "FK_retailer_warehouse_retailer"
        FOREIGN KEY (retailer_id) REFERENCES retailer (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE role_permission
    ADD CONSTRAINT "FK_role_permission_user_permission"
        FOREIGN KEY (permission_id) REFERENCES user_permission (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE role_permission
    ADD CONSTRAINT "FK_role_permission_user_role"
        FOREIGN KEY (role_id) REFERENCES user_role (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE warehouse
    ADD CONSTRAINT "FK_warehouse_address"
        FOREIGN KEY (address_id) REFERENCES address (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE warehouse
    ADD CONSTRAINT "FK_warehouse_customer"
        FOREIGN KEY (customer_id) REFERENCES customer (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE warehouse_item
    ADD CONSTRAINT "FK_warehouse_item_item"
        FOREIGN KEY (item_id) REFERENCES item (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE warehouse_item
    ADD CONSTRAINT "FK_warehouse_item_warehouse"
        FOREIGN KEY (warehouse_id) REFERENCES warehouse (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE waybill
    ADD CONSTRAINT "FK_waybill_app_user_creator"
        FOREIGN KEY (creator_id) REFERENCES app_user (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE waybill
    ADD CONSTRAINT "FK_waybill_app_user_driver"
        FOREIGN KEY (driver_id) REFERENCES app_user (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE waybill
    ADD CONSTRAINT "FK_waybill_app_user_last_editor"
        FOREIGN KEY (last_editor_id) REFERENCES app_user (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE waybill
    ADD CONSTRAINT "FK_waybill_car"
        FOREIGN KEY (car_id) REFERENCES car (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE waybill
    ADD CONSTRAINT "FK_waybill_waybill_status"
        FOREIGN KEY (state_id) REFERENCES waybill_status (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE write_off_act
    ADD CONSTRAINT "FK_write_off_act_app_user"
        FOREIGN KEY (reporter_id) REFERENCES app_user (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE write_off_item
    ADD CONSTRAINT "FK_write_off_item_item"
        FOREIGN KEY (item_id) REFERENCES item (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE write_off_item
    ADD CONSTRAINT "FK_write_off_item_write_off_act"
        FOREIGN KEY (act_id) REFERENCES write_off_act (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE write_off_item
    ADD CONSTRAINT "FK_write_off_item_write_off_reason"
        FOREIGN KEY (reason_id) REFERENCES write_off_reason (id) ON DELETE No Action ON UPDATE No Action
;

/* Create Table Comments, Sequences for Autonumber Columns */

CREATE SEQUENCE address_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE address_city_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE address_state_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE app_user_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE application_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE application_item_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE application_status_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE car_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE customer_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE customer_status_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE item_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE item_category_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE retailer_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE retailer_status_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE retailer_warehouse_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE role_permission_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE user_permission_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE user_role_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE user_status_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE warehouse_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE warehouse_item_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE waybill_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE waybill_status_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE write_off_act_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE write_off_item_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE write_off_reason_id_seq INCREMENT 1 START 1
;